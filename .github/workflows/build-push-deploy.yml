name: Build Docker Images, Push to Registry, and Deploy to production

on:
  push
  # push:
  #   branches:
  #     - main
  # release:
  #   types: [published]

jobs:
  build-backend:
    name: Build and Push Backend
    runs-on: ubuntu-latest
    steps:
      - name: Check out the private Ops repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: "recursive"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "lunary/lunary"
          buildkitd-flags: --debug
          cache-binary: false

      - name: Generate data
        id: date
        run: echo "date=$(date +%Y-%m-%d-%Hh%Mm%Ss)" >> $GITHUB_OUTPUT

      - name: Get short commit hash
        id: commit
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Remove 'v' prefix from release tag
        id: release_tag
        if: github.event.release
        run: echo "tag=$(echo ${{ github.event.release.tag_name }} | sed 's/^v//')" >> $GITHUB_OUTPUT

      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ops/backend.Dockerfile
          push: true
          tags: lunary/backend:latest
          platforms: linux/amd64,linux/arm64
          provenance: false
          outputs: type=registry,push=true

  build-frontend:
    name: Build and Push Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Check out the private Ops repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: "recursive"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "lunary/lunary"
          buildkitd-flags: --debug
          cache-binary: false

      - name: Generate data
        id: date
        run: echo "date=$(date +%Y-%m-%d-%Hh%Mm%Ss)" >> $GITHUB_OUTPUT

      - name: Get short commit hash
        id: commit
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Remove 'v' prefix from release tag
        id: release_tag
        if: github.event.release
        run: echo "tag=$(echo ${{ github.event.release.tag_name }} | sed 's/^v//')" >> $GITHUB_OUTPUT

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ops/frontend.Dockerfile
          push: true
          tags: lunary/frontend:latest
          platforms: linux/amd64,linux/arm64
          provenance: false
          outputs: type=registry,push=true

  build-radar:
    name: Build and Push Radar
    runs-on: ubuntu-latest
    steps:
      - name: Check out the private Ops repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: "recursive"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "lunary/lunary"
          buildkitd-flags: --debug
          cache-binary: false

      - name: Generate data
        id: date
        run: echo "date=$(date +%Y-%m-%d-%Hh%Mm%Ss)" >> $GITHUB_OUTPUT

      - name: Get short commit hash
        id: commit
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Remove 'v' prefix from release tag
        id: release_tag
        if: github.event.release
        run: echo "tag=$(echo ${{ github.event.release.tag_name }} | sed 's/^v//')" >> $GITHUB_OUTPUT

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ops/radar.Dockerfile
          push: true
          tags: lunary/radar:latest
          platforms: linux/amd64,linux/arm64
          provenance: false
          outputs: type=registry,push=true

  build-ml:
    name: Build and Push ML
    runs-on: ubuntu-latest
    steps:
      - name: Check out the private Ops repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: "recursive"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "lunary/lunary"
          buildkitd-flags: --debug
          cache-binary: false

      - name: Generate data
        id: date
        run: echo "date=$(date +%Y-%m-%d-%Hh%Mm%Ss)" >> $GITHUB_OUTPUT

      - name: Get short commit hash
        id: commit
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Remove 'v' prefix from release tag
        id: release_tag
        if: github.event.release
        run: echo "tag=$(echo ${{ github.event.release.tag_name }} | sed 's/^v//')" >> $GITHUB_OUTPUT

      - name: Build and push ml
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ops/ml.Dockerfile
          push: true
          tags: lunary/ml:latest
          platforms: linux/amd64,linux/arm64
          provenance: false
          outputs: type=registry,push=true

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend, build-radar, build-ml]
    steps:
      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_IP_ADDRESS }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PRODUCTION_PORT }}
          script: |
            docker image prune -f
            cd /opt/lunary
            docker compose pull
            docker compose down
            docker compose up -d
