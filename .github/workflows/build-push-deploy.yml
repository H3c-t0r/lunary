name: Build Docker Images, Push to Registry, and Deploy to production

on:
  push
  # push:
  #   branches:
  #     - main
  # release:
  #   types: [published]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend, ml]
    steps:
      - name: Check out the private Ops repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: "recursive"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "lunary/lunary"
          buildkitd-flags: --debug

      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ops/backend.Dockerfile
          push: true
          tags: lunary/backend:test
          platforms: linux/arm64,linux/amd64

      # - name: Generate data
      #   id: date
      #   run: echo "date=$(date +%Y-%m-%d-%Hh%Mm%Ss)" >> $GITHUB_OUTPUT

      # - name: Get short commit hash
      #   id: commit
      #   run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      # - name: Remove 'v' prefix from release tag
      #   id: release_tag
      #   run: echo "tag=$(echo ${{ github.event.release.tag_name }} | sed 's/^v//')" >> $GITHUB_OUTPUT

      # - name: Build and push ${{ matrix.service }}
      #   run: |
      #     docker buildx build \
      #       --platform linux/arm64 \
      #       --tag lunary/${{ matrix.service }}:latest \
      #       --file ./ops/${{ matrix.service }}.Dockerfile \
      #       --push .

  # deploy:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy to Production
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.PRODUCTION_IP_ADDRESS }}
  #         username: root
  #         key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         port: ${{ secrets.PRODUCTION_PORT }}
  #         script: |
  #           docker image prune -f
  #           cd /opt/lunary
  #           docker compose pull
  #           docker compose down
  #           docker compose up -d
